name: Build query service

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: azure/docker-login@v1
        with:
          login-server: acrapmmpoc.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - run: |
          docker build . -t acrapmmpoc.azurecr.io/appdb:${{ github.sha }}
          docker push acrapmmpoc.azurecr.io/appdb:${{ github.sha }}
      #            --resource-group $CLUSTER_RESOURCE_GROUP_NAME \
      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.SERVICE_PRINCIPAL_APP_ID }}
          tenant-id: ${{ secrets.SERVICE_PRINCIPAL_TENANT }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
      - uses: azure/setup-kubectl@v3
        name: Setup kubectl
      - name: Setup kubelogin
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.26'
      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.CLUSTER_RESOURCE_GROUP_NAME }}
          cluster-name: ${{ secrets.CLUSTER_NAME }}
          admin: 'true'
          use-kubelogin: 'true'
#      - name: Get AKS credentials
#        env:
#          CLUSTER_RESOURCE_GROUP_NAME: ${{ secrets.CLUSTER_RESOURCE_GROUP_NAME }}
#          CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
#        run: |
#            az aks get-credentials \
#            --resource-group $CLUSTER_RESOURCE_GROUP_NAME \
#            --name $CLUSTER_NAME \
#            --overwrite-existing
      - name: Deploy application
        env:
          ACR_NAME: ${{ secrets.ACR_NAME }}
        run: make deploy